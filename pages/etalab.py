import streamlit as st

st.title("Visualisation des donn√©es DVF")

if st.button("Ouvrir l'application DVF officielle"):
    js = "window.open('https://app.dvf.etalab.gouv.fr/', '_blank').focus();"
    st.components.v1.html(f"<script>{js}</script>")


import streamlit as st
import pandas as pd

st.title("Exploration des donn√©es fonci√®res DVF üè†")

st.markdown("""
Cette page permet d'explorer les transactions immobili√®res enregistr√©es dans la base publique **DVF (Demandes de Valeurs Fonci√®res)**.
""")

# ----------- T√©l√©chargement d'un fichier local exemple ----------- #
@st.cache_data
def charger_donnees(departement):
    """
    Charge un fichier CSV DVF pour un d√©partement donn√©.
    Exemple : 'DVF_Paris.csv'
    """
    try:
        df = pd.read_csv(f"data/DVF_{departement}.csv", delimiter='|')
        return df
    except FileNotFoundError:
        st.error(f"Fichier DVF pour le d√©partement {departement} introuvable dans le dossier 'data/'.")
        return pd.DataFrame()


# ----------- S√©lecteur de d√©partement ----------- #
departement = st.selectbox("Choisir un d√©partement :", ["75", "13", "33", "69", "59"], format_func=lambda x: f"{x} - {x}")

# Chargement des donn√©es
df = charger_donnees(departement)

if not df.empty:
    # Affichage des 100 premi√®res lignes
    st.subheader("Aper√ßu des transactions fonci√®res")
    st.dataframe(df.head(100))

    # Filtrage par ann√©e si colonne 'date_mutation' pr√©sente
    if "date_mutation" in df.columns:
        df["date_mutation"] = pd.to_datetime(df["date_mutation"], errors='coerce')
        annees_disponibles = df["date_mutation"].dt.year.dropna().unique()
        annee = st.selectbox("Filtrer par ann√©e :", sorted(annees_disponibles, reverse=True))
        df_filtr√© = df[df["date_mutation"].dt.year == annee]

        st.write(f"Nombre de transactions en {annee} : {len(df_filtr√©)}")
        st.dataframe(df_filtr√©.head(50))

else:
    st.warning("Aucune donn√©e √† afficher.")

